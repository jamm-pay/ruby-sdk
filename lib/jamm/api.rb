# frozen_string_literal: true

# #Jamm API
#
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
#
# The version of the OpenAPI document: 1.0
#
# Generated by: https://openapi-generator.tech
# Generator version: 7.9.0
#

# Common files
require 'jamm/api/api_client'
require 'jamm/api/api_error'
require 'jamm/api/version'
require 'jamm/api/configuration'

# Models
require 'jamm/api/models/apiv1_error'
require 'jamm/api/models/apiv1_status'
require 'jamm/api/models/customer_service_update_customer_body'
require 'jamm/api/models/googlerpc_status'
require 'jamm/api/models/protobuf_any'
require 'jamm/api/models/v1_add_charge_request'
require 'jamm/api/models/v1_add_charge_response'
require 'jamm/api/models/v1_bank'
require 'jamm/api/models/v1_bank_assets'
require 'jamm/api/models/v1_bank_branch'
require 'jamm/api/models/v1_bank_information'
require 'jamm/api/models/v1_bank_quota'
require 'jamm/api/models/v1_bank_scheduled_maintenance_period'
require 'jamm/api/models/v1_buyer'
require 'jamm/api/models/v1_charge'
require 'jamm/api/models/v1_charge_message'
require 'jamm/api/models/v1_charge_message_status'
require 'jamm/api/models/v1_charge_result'
require 'jamm/api/models/v1_contract'
require 'jamm/api/models/v1_contract_message'
require 'jamm/api/models/v1_contract_status'
require 'jamm/api/models/v1_create_contract_with_charge_request'
require 'jamm/api/models/v1_create_contract_with_charge_response'
require 'jamm/api/models/v1_create_contract_without_charge_request'
require 'jamm/api/models/v1_create_contract_without_charge_response'
require 'jamm/api/models/v1_create_customer_request'
require 'jamm/api/models/v1_create_customer_response'
require 'jamm/api/models/v1_customer'
require 'jamm/api/models/v1_delete_customer_response'
require 'jamm/api/models/v1_deposit_type'
require 'jamm/api/models/v1_error_detail'
require 'jamm/api/models/v1_error_response'
require 'jamm/api/models/v1_error_type'
require 'jamm/api/models/v1_event_type'
require 'jamm/api/models/v1_get_bank_response'
require 'jamm/api/models/v1_get_branch_response'
require 'jamm/api/models/v1_get_branches_response'
require 'jamm/api/models/v1_get_charge_response'
require 'jamm/api/models/v1_get_charges_response'
require 'jamm/api/models/v1_get_contract_response'
require 'jamm/api/models/v1_get_customer_response'
require 'jamm/api/models/v1_get_major_banks_response'
require 'jamm/api/models/v1_initial_charge'
require 'jamm/api/models/v1_kyc_status'
require 'jamm/api/models/v1_merchant'
require 'jamm/api/models/v1_merchant_customer'
require 'jamm/api/models/v1_merchant_webhook_message'
require 'jamm/api/models/v1_message_response'
require 'jamm/api/models/v1_off_session_payment_request'
require 'jamm/api/models/v1_off_session_payment_response'
require 'jamm/api/models/v1_on_session_payment_data'
require 'jamm/api/models/v1_on_session_payment_error'
require 'jamm/api/models/v1_on_session_payment_error_code'
require 'jamm/api/models/v1_on_session_payment_request'
require 'jamm/api/models/v1_on_session_payment_response'
require 'jamm/api/models/v1_pagination'
require 'jamm/api/models/v1_payment_authorization_status'
require 'jamm/api/models/v1_payment_link'
require 'jamm/api/models/v1_ping_response'
require 'jamm/api/models/v1_search_banks_response'
require 'jamm/api/models/v1_search_branches_response'
require 'jamm/api/models/v1_url'
require 'jamm/api/models/v1_update_customer_response'
require 'jamm/api/models/v1_user_account_message'
require 'jamm/api/models/v1_withdraw_request'
require 'jamm/api/models/v1_withdraw_response'

# APIs
require 'jamm/api/api/customer_api'
require 'jamm/api/api/healthcheck_api'
require 'jamm/api/api/payment_api'
require 'jamm/api/api/webhook_service_api'

module Api
  class << self
    # Customize default settings for the SDK using block.
    #   Api.configure do |config|
    #     config.username = "xxx"
    #     config.password = "xxx"
    #   end
    # If no block given, return the default Configuration object.
    def configure
      if block_given?
        yield(Configuration.default)
      else
        Configuration.default
      end
    end
  end
end
